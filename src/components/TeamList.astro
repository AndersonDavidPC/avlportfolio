
---
export interface Props {
  members: Array<{
    name: string;
    role: string;
    bio?: string;
    avatar?: string;
    social?: {
      linkedin?: string;
      twitter?: string;
      email?: string;
    };
  }>;
  variant?: 'grid' | 'list';
  columns?: 2 | 3 | 4;
}

const { members, variant = 'grid', columns = 3 } = Astro.props;

const gridClasses = {
  2: 'grid-cols-1 md:grid-cols-2',
  3: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3',
  4: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-4'
};

// FunciÃ³n para generar avatar SVG
function generateAvatar(name: string, index: number) {
  const colors = [
    ['#dc4dff', '#ff006e'],
    ['#3b82f6', '#06b6d4'],
    ['#10b981', '#059669'],
    ['#f59e0b', '#d97706'],
    ['#ef4444', '#dc2626'],
    ['#8b5cf6', '#7c3aed']
  ];

  const [color1, color2] = colors[index % colors.length];
  const initials = name.split(' ').map(n => n[0]).join('').substring(0, 2);

  return `
    <svg class="w-full h-full" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
      <defs>
        <linearGradient id="grad-${index}" x1="0%" y1="0%" x2="100%" y2="100%">
          <stop offset="0%" style="stop-color:${color1};stop-opacity:1" />
          <stop offset="100%" style="stop-color:${color2};stop-opacity:1" />
        </linearGradient>
      </defs>
      <circle cx="50" cy="50" r="50" fill="url(#grad-${index})" />
      <text x="50" y="50" text-anchor="middle" dy="0.35em" fill="white" font-size="28" font-weight="600" font-family="system-ui">
        ${initials}
      </text>
    </svg>
  `;
}
---

<div class={variant === 'grid' 
  ? `grid ${gridClasses[columns]} gap-6 lg:gap-8` 
  : 'space-y-6'
}>
  {members.map((member, index) => (
    <div class={`${variant === 'grid' ? 'text-center' : 'flex items-center space-x-6'} group`}>

      <!-- Avatar -->
      <div class={`${variant === 'grid' ? 'mx-auto mb-4' : 'flex-shrink-0'} relative`}>
        <div class={`${variant === 'grid' ? 'w-24 h-24 lg:w-32 lg:h-32' : 'w-16 h-16'} rounded-full overflow-hidden ring-4 ring-white shadow-lg transition-transform duration-300 group-hover:scale-105`}>
          {member.avatar ? (
            <img 
              src={member.avatar} 
              alt={member.name}
              class="w-full h-full object-cover"
            />
          ) : (
            <div set:html={generateAvatar(member.name, index)} />
          )}
        </div>

        <!-- Status Indicator -->
        <div class="absolute bottom-1 right-1 w-4 h-4 bg-green-400 border-2 border-white rounded-full"></div>
      </div>

      <!-- Content -->
      <div class={`${variant === 'grid' ? 'space-y-2' : 'flex-1 min-w-0'}`}>
        <h3 class={`font-semibold text-neutral-800 group-hover:text-primary-600 transition-colors ${
          variant === 'grid' ? 'text-lg lg:text-xl' : 'text-lg'
        }`}>
          {member.name}
        </h3>

        <p class={`text-primary-600 font-medium ${variant === 'grid' ? 'text-sm lg:text-base' : 'text-sm'}`}>
          {member.role}
        </p>

        {member.bio && (
          <p class={`text-neutral-600 ${variant === 'grid' ? 'text-sm lg:text-base' : 'text-sm'} ${variant === 'grid' ? 'mt-3' : 'mt-2'}`}>
            {member.bio}
          </p>
        )}

        <!-- Social Links -->
        {member.social && (
          <div class={`flex ${variant === 'grid' ? 'justify-center mt-4' : 'mt-3'} space-x-3`}>
            {member.social.linkedin && (
              <a 
                href={member.social.linkedin}
                target="_blank"
                rel="noopener noreferrer"
                class="text-neutral-400 hover:text-blue-600 transition-colors"
                aria-label={`LinkedIn de ${member.name}`}
              >
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433a2.062 2.062 0 01-2.063-2.065 2.064 2.064 0 112.063 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
                </svg>
              </a>
            )}

            {member.social.twitter && (
              <a 
                href={member.social.twitter}
                target="_blank"
                rel="noopener noreferrer"
                class="text-neutral-400 hover:text-blue-400 transition-colors"
                aria-label={`Twitter de ${member.name}`}
              >
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
                </svg>
              </a>
            )}

            {member.social.email && (
              <a 
                href={`mailto:${member.social.email}`}
                class="text-neutral-400 hover:text-primary-600 transition-colors"
                aria-label={`Email de ${member.name}`}
              >
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
                </svg>
              </a>
            )}
          </div>
        )}
      </div>
    </div>
  ))}
</div>
