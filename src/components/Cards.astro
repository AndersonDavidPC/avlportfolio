
---
export interface Props {
  cards: Array<{
    title: string;
    description: string;
    icon?: string;
    image?: string;
    href?: string;
    badge?: string;
  }>;
  variant?: 'default' | 'services' | 'testimonials';
  columns?: 1 | 2 | 3 | 4;
}

const { cards, variant = 'default', columns = 3 } = Astro.props;

const gridClasses = {
  1: 'grid-cols-1',
  2: 'grid-cols-1 md:grid-cols-2',
  3: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3',
  4: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-4'
};
---

<div class={`grid ${gridClasses[columns]} gap-6 lg:gap-8`}>
  {cards.map((card, index) => (
    <div class={`card p-6 lg:p-8 hover-lift animation-delay-${index * 200} animate-fade-in ${
      card.href ? 'cursor-pointer group' : ''
    }`}>

      {/* Badge */}
      {card.badge && (
        <div class="mb-4">
          <span class="bg-gradient-to-r from-primary-100 to-accent/10 text-primary-700 px-3 py-1 rounded-full text-sm font-medium">
            {card.badge}
          </span>
        </div>
      )}

      {/* Icon or Image */}
      {card.icon && (
        <div class="mb-6">
          <div class="w-12 h-12 bg-gradient-to-br from-primary-500 to-accent rounded-lg flex items-center justify-center">
            <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24">
              <path d={card.icon}/>
            </svg>
          </div>
        </div>
      )}

      {card.image && (
        <div class="mb-6 overflow-hidden rounded-lg">
          <img 
            src={card.image} 
            alt={card.title}
            class="w-full h-48 object-cover transition-transform duration-300 group-hover:scale-105"
          />
        </div>
      )}

      {/* Content */}
      <div class="space-y-4">
        <h3 class={`text-xl font-semibold ${
          card.href ? 'group-hover:text-primary-600' : ''
        } transition-colors`}>
          {card.title}
        </h3>

        <p class="text-neutral-600 leading-relaxed">
          {card.description}
        </p>

        {/* Link Arrow */}
        {card.href && (
          <div class="flex items-center text-primary-600 font-medium mt-4 group-hover:translate-x-1 transition-transform">
            <span>Saber más</span>
            <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
            </svg>
          </div>
        )}
      </div>

      {/* Click Handler */}
      {card.href && (
        <a href={card.href} class="absolute inset-0 z-10" aria-label={`Ver más sobre ${card.title}`}></a>
      )}
    </div>
  ))}
</div>

<style>
  .card {
    position: relative;
  }
</style>
